{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://json-object-preview/./src/extension.ts","webpack://json-object-preview/external commonjs \"vscode\"","webpack://json-object-preview/webpack/bootstrap","webpack://json-object-preview/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.activate = activate;\nexports.deactivate = deactivate;\nconst vscode = __importStar(require(\"vscode\"));\nlet hiddenDecorationType;\nlet hiddenRanges = [];\nlet hiddenLines = [];\nfunction activate(context) {\n    vscode.languages.registerFoldingRangeProvider({ language: 'json' }, new JsonFoldingRangeProvider());\n    const decorationType = vscode.window.createTextEditorDecorationType({\n        after: {\n            margin: '0 0 0 0em',\n            color: 'gray'\n        }\n    });\n    const updateDecorationsForEditor = (editor) => {\n        if (editor && editor.document.languageId === 'json') {\n            updateDecorations(editor, decorationType);\n        }\n    };\n    context.subscriptions.push(vscode.window.onDidChangeActiveTextEditor(editor => {\n        updateDecorationsForEditor(editor);\n    }));\n    context.subscriptions.push(vscode.window.onDidChangeTextEditorVisibleRanges(event => {\n        updateDecorationsForEditor(event.textEditor);\n    }));\n    context.subscriptions.push(vscode.workspace.onDidChangeTextDocument(event => {\n        const editor = vscode.window.activeTextEditor;\n        if (editor && event.document === editor.document && editor.document.languageId === 'json') {\n            updateDecorations(editor, decorationType);\n        }\n    }));\n    // Apply decorations to the active editor when the extension is activated\n    updateDecorationsForEditor(vscode.window.activeTextEditor);\n}\nclass JsonFoldingRangeProvider {\n    provideFoldingRanges(document, context, token) {\n        const ranges = [];\n        const stack = [];\n        for (let i = 0; i < document.lineCount; i++) {\n            const line = document.lineAt(i);\n            const text = line.text.trim();\n            if (text.endsWith('{') || text.endsWith('[')) {\n                stack.push(i);\n            }\n            else if (text.endsWith('}') || text.endsWith(']')) {\n                const start = stack.pop();\n                if (start !== undefined) {\n                    ranges.push(new vscode.FoldingRange(start, i, vscode.FoldingRangeKind.Region));\n                }\n            }\n        }\n        return ranges;\n    }\n}\nfunction updateDecorations(editor, decorationType) {\n    const document = editor.document;\n    const decorations = [];\n    const foldingRanges = editor.visibleRanges;\n    foldingRanges.forEach(range => {\n        for (let i = range.start.line; i <= range.end.line; i++) {\n            // console.log(`\\nlog..=========================`);\n            const line = document.lineAt(i);\n            const text = line.text.trim();\n            // console.log(`log..text @ ${i+1}: ${text}`);\n            const lineToCheck = i;\n            if (text.endsWith('{') || text.endsWith('[')) {\n                // console.log(`\\nDEBUG..getFirstKeyValuePreview for startline ${i+1} with text ${text}`);\n                const preview = getFirstKeyValuePreview(document, i);\n                // console.log(`log..preview: ${preview}`);\n                const folded = isLineFolded(editor, lineToCheck + 1);\n                // console.log(`folded State AT ${lineToCheck+1} is ${folded ? 'folded' : 'not folded'}`);\n                if (folded) {\n                    const decoration = { range: new vscode.Range(i, line.range.end.character, i, line.range.end.character), renderOptions: { after: { contentText: preview } } };\n                    decorations.push(decoration);\n                }\n            }\n            // Begin section to hide or show lines\n            if (text === \"}\" || text === \"},\" || text === \"]\" || text === \"],\") {\n                // Hide the line above ONLY if the line right above is folded\n                const hidden = isLineFolded(editor, lineToCheck - 1);\n                // console.log(`Hidden Line State: ${lineToCheck} is ${hidden ? 'hidden' : 'not hidden'}`);\n                if (hidden) {\n                    hideTextInLine(editor, lineToCheck);\n                    hiddenLines.push(lineToCheck);\n                }\n                ;\n            }\n            // Check if the current line is in hiddenLines array\n            const isHidden = hiddenLines.includes(lineToCheck);\n            // If current line is there, we need to unhide it ONLY IF the line above is NOT folded\n            if (isHidden) {\n                const lineAboveIsFolded = isLineFolded(editor, lineToCheck - 1);\n                if (!lineAboveIsFolded) {\n                    // console.log(`Need to unhide this line(${lineToCheck+1})!`);\n                    showHiddenText(editor, lineToCheck);\n                }\n            }\n            // End of section to hide  and show lines\n        }\n    });\n    editor.setDecorations(decorationType, decorations);\n}\nfunction showHiddenText(editor, line) {\n    if (!hiddenDecorationType) {\n        return;\n    }\n    // Filter out the range for the specified line\n    hiddenRanges = hiddenRanges.filter(range => range.start.line !== line);\n    // Update the decorations\n    editor.setDecorations(hiddenDecorationType, hiddenRanges);\n    // Dispose the decoration type if no ranges are left\n    if (hiddenRanges.length === 0) {\n        hiddenDecorationType.dispose();\n        hiddenDecorationType = undefined;\n    }\n}\nfunction hideTextInLine(editor, line) {\n    if (!hiddenDecorationType) {\n        hiddenDecorationType = vscode.window.createTextEditorDecorationType({\n            textDecoration: 'none; opacity: 0.18;', // Make text faded.\n        });\n    }\n    const range = new vscode.Range(new vscode.Position(line, 0), new vscode.Position(line, editor.document.lineAt(line).text.length));\n    hiddenRanges.push(range);\n    editor.setDecorations(hiddenDecorationType, hiddenRanges);\n}\nfunction isLineFolded(editor, line) {\n    for (const range of editor.visibleRanges) {\n        if (line >= range.start.line && line <= range.end.line) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getFirstKeyValuePreview(document, startLine) {\n    let preview = '';\n    let depth = 0;\n    let firstKeyValueFound = false;\n    for (let i = startLine; i < document.lineCount; i++) {\n        const line = document.lineAt(i);\n        const text = line.text.trim();\n        // console.log(`DEBUG: startLine: ${startLine+1}`)\n        if (text.endsWith('{') || text.endsWith('[')) {\n            depth++;\n        }\n        else if (text.endsWith('}') || text.endsWith(']')) {\n            depth--;\n        }\n        if (!firstKeyValueFound && text.includes(':')) {\n            const keyValue = text.split(':').map(part => part.trim());\n            // console.log(`DEBUG:Line ${i+1} keyValue: ${keyValue}`);\n            if (keyValue.length >= 2) {\n                preview = `${getFirstValuePreview(keyValue[1], document, i)}`;\n                const calc_preview = preview;\n                // console.log(`log..initial preview: ${preview}`);\n                if ((!preview.includes('...]') && !preview.includes('...}'))) {\n                    preview = `${keyValue[0]}: ${preview}`;\n                }\n                firstKeyValueFound = true;\n            }\n        }\n        else if (!firstKeyValueFound && text === \"{\") {\n            preview = `${document.lineAt(i + 1).text.trim()}...}`;\n            firstKeyValueFound = true;\n        }\n        if (depth === 0) {\n            break;\n        }\n    }\n    // console.log(`log...getFirstKeyValuePreview for line ${startLine+1}: ${preview}`);\n    return preview.length > 120 ? preview.substring(0, 80) + '...' : preview;\n}\nfunction getFirstValuePreview(value, document, lineNum) {\n    // console.log(`log..item to run getFirstValuePreview for: ${value}`);\n    try {\n        const parsedValue = JSON.parse(value);\n        // console.log(`log..parsedValue ${parsedValue}`);\n        if (typeof parsedValue === 'object' && parsedValue !== null) {\n            const firstKey = Object.keys(parsedValue)[0];\n            return `${firstKey}: ${JSON.stringify(parsedValue[firstKey])}`;\n        }\n    }\n    catch (e) {\n        // console.log(`log..Error ${e}`);\n        // If parsing fails, return the value as is\n    }\n    if (value === '{' && !document.lineAt(lineNum + 1).text.trim().includes('{')) { // Also need to check the next two lines\n        return `${document.lineAt(lineNum + 1).text.trim()}...}`;\n    }\n    if (value === '{') {\n        return `...}`;\n    }\n    if (value === '[') {\n        if (document.lineAt(lineNum + 1).text.trim().startsWith(\"\\\"\")) {\n            // console.log(`DEBUG: line ${lineNum+2} starts with \"\". The full value is ${document.lineAt(lineNum+1).text.trim()}`);\n            let nextLineCount = 2;\n            let elementCount = 1;\n            while (document.lineAt(lineNum + nextLineCount).text.trim().startsWith(\"\\\"\")) {\n                elementCount = elementCount + 1;\n                nextLineCount = nextLineCount + 1;\n            }\n            ;\n            return `${elementCount} elements...]`;\n        }\n        ;\n        return `...]`;\n    }\n    return value;\n}\nfunction deactivate() { }\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","activate","context","vscode","languages","registerFoldingRangeProvider","language","JsonFoldingRangeProvider","decorationType","window","createTextEditorDecorationType","after","margin","color","updateDecorationsForEditor","editor","document","languageId","updateDecorations","subscriptions","push","onDidChangeActiveTextEditor","onDidChangeTextEditorVisibleRanges","event","textEditor","workspace","onDidChangeTextDocument","activeTextEditor","deactivate","hiddenDecorationType","hiddenRanges","hiddenLines","provideFoldingRanges","token","ranges","stack","i","lineCount","text","lineAt","trim","endsWith","start","pop","FoldingRange","FoldingRangeKind","Region","decorations","visibleRanges","forEach","range","line","end","lineToCheck","preview","getFirstKeyValuePreview","isLineFolded","decoration","Range","character","renderOptions","contentText","hideTextInLine","includes","showHiddenText","setDecorations","filter","length","dispose","textDecoration","Position","startLine","depth","firstKeyValueFound","keyValue","split","map","part","getFirstValuePreview","substring","lineNum","parsedValue","JSON","parse","firstKey","keys","stringify","e","startsWith","nextLineCount","elementCount","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}